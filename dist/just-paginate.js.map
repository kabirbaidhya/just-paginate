{"version":3,"sources":["webpack:///webpack/bootstrap 501f7423f61408e79f7e","webpack:///./index.js","webpack:///./lib/Paginator.js","webpack:///./lib/PaginatedList.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA;AACA;;;;;;;;;;ACDA;;AAEA;AACA;AACA,EAAC;;AAED,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA8B,0BAA0B;AACxD;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAwC,0BAA0B;AAClE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA,EAAC;;AAED;AACA;AACA;;AAEA,6B;;;;;;;;;AC1JA;;AAEA;AACA;AACA,EAAC;;AAED,iCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB;;AAEA;;AAEA,uCAAsC,uCAAuC,gBAAgB;;AAE7F,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,EAAC;;AAED,iC","file":"just-paginate.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 501f7423f61408e79f7e\n **/","module.exports.Paginator = require('./lib/Paginator').default;\nmodule.exports.PaginatedList = require('./lib/PaginatedList').default;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A Paginator class that is responsible for Paginating an array of all records\n *\n *  Usage:\n *      let paginator = new Paginator(allRecords);\n *      paginator.setMaxRows(maxRows);\n *\n *      // Get total records\n *      let total = paginator.total();\n *\n *      // Get no of pages\n *      let noOfPages = paginator.noOfPages();\n *\n *      // Pagination links for page 1\n *      let links = paginator.setPage(1).links();\n *\n *      // Records for page 2\n *      let results = paginator.setPage(2).results();\n *\n * @author Kabir Baidhya\n */\n\nvar Paginator = function () {\n    function Paginator(data) {\n        _classCallCheck(this, Paginator);\n\n        this.data = data || [];\n        this.currentPage = null;\n        this.maxRows = null;\n    }\n\n    _createClass(Paginator, [{\n        key: 'availablePages',\n        value: function availablePages() {\n            var pages = [];\n\n            for (var page = 1; page <= this.noOfPages(); page++) {\n                pages.push(page);\n            }\n\n            return pages;\n        }\n    }, {\n        key: 'hasPrevious',\n        value: function hasPrevious() {\n            return this.currentPage > 1;\n        }\n    }, {\n        key: 'hasNext',\n        value: function hasNext() {\n            return this.currentPage < this.noOfPages();\n        }\n    }, {\n        key: 'setPage',\n        value: function setPage(value) {\n            if (!isPositiveInt(value)) {\n                throw new Error('Page number should be a positive integers(greater than zero)');\n            }\n\n            if (value > this.noOfPages()) {\n                throw new Error('Current Page should not be greater than the total number of pages');\n            }\n\n            thils.currentPage = parseInt(value);\n\n            return this;\n        }\n    }, {\n        key: 'setMaxRows',\n        value: function setMaxRows(value) {\n            if (!isPositiveInt(value)) {\n                throw new Error('Maximum rows should be a positive integer (greater than zero)');\n            }\n\n            this.maxRows = parseInt(value);\n\n            return this;\n        }\n    }, {\n        key: 'results',\n        value: function results() {\n            var currentPage = this.currentPage;\n            var maxRows = this.maxRows;\n            var data = this.data;\n\n            var firstIndex = (currentPage - 1) * maxRows;\n            var results = [];\n\n            if (data.length > 0 && data[firstIndex]) {\n                for (var i = firstIndex; i < firstIndex + maxRows; i++) {\n                    if (!data[i]) {\n                        break;\n                    }\n\n                    results.push(data[i]);\n                }\n            }\n\n            return results;\n        }\n    }, {\n        key: 'noOfPages',\n        value: function noOfPages() {\n            var maxRows = this.maxRows;\n            var total = this.total;\n\n\n            if (!isPositiveInt(maxRows)) {\n                throw new Error('Maximum number of rows not set.');\n            }\n\n            return Math.ceil(total() / maxRows);\n        }\n    }, {\n        key: 'total',\n        value: function total() {\n            return this.data.length;\n        }\n    }, {\n        key: 'links',\n        value: function links() {\n            var links = {};\n\n            links.pages = this.availablePages();\n\n            if (this.hasPrevious()) {\n                links.prev = this.currentPage - 1;\n            }\n\n            if (this.hasNext()) {\n                links.next = this.currentPage + 1;\n            }\n\n            return links;\n        }\n    }]);\n\n    return Paginator;\n}();\n\nfunction isPositiveInt(value) {\n    return !isNaN(value) && value > 0;\n}\n\nexports.default = Paginator;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/Paginator.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Paginator = require('./Paginator');\n\nvar _Paginator2 = _interopRequireDefault(_Paginator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Provides an easy API to for paginating a list of data(array).\n *\n * @author Kabir Baidhya\n */\n\nvar PaginatedList = function () {\n    function PaginatedList(data) {\n        _classCallCheck(this, PaginatedList);\n\n        this.data = data || [];\n        this.paginator = new _Paginator2.default(data);\n    }\n\n    _createClass(PaginatedList, [{\n        key: 'paginate',\n        value: function paginate(page, maxRows) {\n            this.paginator.setMaxRows(maxRows);\n\n            if (this.paginator.noOfPages() === 0) {\n                return [];\n            }\n\n            this.paginator.setPage(page);\n\n            return {\n                currentPage: page,\n                maxRows: maxRows,\n                links: this.paginator.links(),\n                total: this.paginator.total(),\n                results: this.paginator.results(),\n                noOfPages: this.paginator.noOfPages()\n            };\n        }\n    }, {\n        key: 'all',\n        value: function all() {\n            return data;\n        }\n    }, {\n        key: 'count',\n        value: function count() {\n            return data.length;\n        }\n    }]);\n\n    return PaginatedList;\n}();\n\nexports.default = PaginatedList;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/PaginatedList.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}